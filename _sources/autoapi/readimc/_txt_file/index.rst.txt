:orphan:

:py:mod:`readimc._txt_file`
===========================

.. py:module:: readimc._txt_file


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   readimc._txt_file.TXTFile




.. py:class:: TXTFile(path)

   Bases: :py:obj:`readimc._imc_file.IMCFile`, :py:obj:`readimc.data.AcquisitionBase`

   A class for reading IMC .txt files

   :param path: path to the IMC .txt file

   .. py:method:: num_channels(self)
      :property:

      Number of channels


   .. py:method:: channel_metals(self)
      :property:

      Symbols of metal isotopes (e.g. ``["Ag", "Ir"]``)


   .. py:method:: channel_masses(self)
      :property:

      Atomic masses of metal isotopes (e.g. ``[107, 191]``)


   .. py:method:: channel_labels(self)
      :property:

      Channel labels (user-provided)


   .. py:method:: open(self)

      Opens the IMC .txt file for reading.

      It is good practice to use context managers whenever possible:

      .. code-block:: python

          with TXTFile("/path/to/file.txt") as f:
              pass



   .. py:method:: close(self)

      Closes the IMC .txt file.

      It is good practice to use context managers whenever possible:

      .. code-block:: python

          with TXTFile("/path/to/file.txt") as f:
              pass



   .. py:method:: read_acquisition(self, *args)

      Reads IMC acquisition data as numpy array.

      .. note::
          This function takes a variable number of arguments for
          compatibility with ``MCDFile``.

      :return: the acquisition data as 32-bit floating point array,
          shape: (c, y, x)


   .. py:method:: path(self)
      :property:

      Path to the IMC file


   .. py:method:: channel_names(self)
      :property:

      Unique channel names in the format ``f"{metal}{mass}"`` (e.g.
      ``["Ag107", "Ir191"]``)



