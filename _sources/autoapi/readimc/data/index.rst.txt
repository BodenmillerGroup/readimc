:py:mod:`readimc.data`
======================

.. py:module:: readimc.data

.. autoapi-nested-parse::

   Imaging Mass Cytometry metadata classes



Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   readimc.data.Slide
   readimc.data.Panorama
   readimc.data.Acquisition
   readimc.data.AcquisitionBase




.. py:class:: Slide

   Slide metadata

   .. py:property:: description
      :type: Optional[str]

      User-provided slide description


   .. py:property:: width_um
      :type: Optional[float]

      Slide width, in micrometers


   .. py:property:: height_um
      :type: Optional[float]

      Slide height, in micrometers


   .. py:attribute:: id
      :annotation: :int

      Slide ID


   .. py:attribute:: metadata
      :annotation: :Dict[str, str]

      Full slide metadata


   .. py:attribute:: panoramas
      :annotation: :List[readimc.data._panorama.Panorama]

      List of panoramas associated with this slide


   .. py:attribute:: acquisitions
      :annotation: :List[readimc.data._acquisition.Acquisition]

      List of acquisitions associated with this slide



.. py:class:: Panorama

   Panorama metadata (only for panoramas with panorama image data)

   .. py:property:: description
      :type: Optional[str]

      User-provided panorama description


   .. py:property:: width_um
      :type: Optional[float]

      Panorama width, in micrometers


   .. py:property:: height_um
      :type: Optional[float]

      Panorama height, in micrometers


   .. py:property:: points_um
      :type: Optional[Tuple[Tuple[float, float], Tuple[float, float], Tuple[float, float], Tuple[float, float]]]

      User-provided ROI points, in micrometers

      Order: (top left, top right, bottom right, bottom left)


   .. py:attribute:: slide
      :annotation: :readimc.data._slide.Slide

      Parent slide


   .. py:attribute:: id
      :annotation: :int

      Panorama ID


   .. py:attribute:: metadata
      :annotation: :Dict[str, str]

      Full panorama metadata


   .. py:attribute:: acquisitions
      :annotation: :List[readimc.data._acquisition.Acquisition]

      List of acquisitions associated with this panorama



.. py:class:: Acquisition

   Bases: :py:obj:`AcquisitionBase`

   IMC acquisition metadata

   .. py:property:: description
      :type: Optional[str]

      User-provided acquisition description


   .. py:property:: width_px
      :type: Optional[int]

      Acquisition width, in pixels


   .. py:property:: height_px
      :type: Optional[int]

      Acquisition height, in pixels


   .. py:property:: pixel_size_x_um
      :type: Optional[float]

      Width of a single pixel, in micrometers


   .. py:property:: pixel_size_y_um
      :type: Optional[float]

      Height of a single pixel, in micrometers


   .. py:property:: width_um
      :type: Optional[float]

      Acquisition width, in micrometers


   .. py:property:: height_um
      :type: Optional[float]

      Acquisition height, in micrometers


   .. py:property:: num_channels
      :type: int

      Number of channels


   .. py:property:: channel_metals
      :type: Sequence[str]

      Symbols of metal isotopes (e.g. ``["Ag", "Ir"]``)


   .. py:property:: channel_masses
      :type: Sequence[int]

      Atomic masses of metal isotopes (e.g. ``[107, 191]``)


   .. py:property:: channel_labels
      :type: Sequence[str]

      Channel labels (user-provided)


   .. py:property:: roi_coords_um
      :type: Optional[Tuple[Tuple[float, float], Tuple[float, float], Tuple[float, float], Tuple[float, float]]]

      ROI stage coordinates, in micrometers

      Order: (top left, top right, bottom right, bottom left)


   .. py:property:: channel_names
      :type: Sequence[str]

      Unique channel names in the format ``f"{metal}{mass}"`` (e.g.
      ``["Ag107", "Ir191"]``)


   .. py:attribute:: slide
      :annotation: :readimc.data._slide.Slide

      Parent slide


   .. py:attribute:: panorama
      :annotation: :Optional[readimc.data._panorama.Panorama]

      Associated panorama


   .. py:attribute:: id
      :annotation: :int

      Acquisition ID


   .. py:attribute:: roi_points_um
      :annotation: :Optional[Tuple[Tuple[float, float], Tuple[float, float], Tuple[float, float], Tuple[float, float]]]

      User-provided ROI points, in micrometers

      Order: (top left, top right, bottom right, bottom left)


   .. py:attribute:: metadata
      :annotation: :Dict[str, str]

      Full acquisition metadata



.. py:class:: AcquisitionBase

   Bases: :py:obj:`abc.ABC`

   Shared IMC acquisition metadata interface

   .. py:property:: num_channels
      :type: int
      :abstractmethod:

      Number of channels


   .. py:property:: channel_metals
      :type: Sequence[str]
      :abstractmethod:

      Symbols of metal isotopes (e.g. ``["Ag", "Ir"]``)


   .. py:property:: channel_masses
      :type: Sequence[int]
      :abstractmethod:

      Atomic masses of metal isotopes (e.g. ``[107, 191]``)


   .. py:property:: channel_labels
      :type: Sequence[str]
      :abstractmethod:

      Channel labels (user-provided)


   .. py:property:: channel_names
      :type: Sequence[str]

      Unique channel names in the format ``f"{metal}{mass}"`` (e.g.
      ``["Ag107", "Ir191"]``)



