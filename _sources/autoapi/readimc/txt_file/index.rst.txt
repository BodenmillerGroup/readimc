readimc.txt_file
================

.. py:module:: readimc.txt_file


Classes
-------

.. autoapisummary::

   readimc.txt_file.TXTFile


Module Contents
---------------

.. py:class:: TXTFile(path)

   Bases: :py:obj:`readimc.imc_file.IMCFile`, :py:obj:`readimc.data.AcquisitionBase`


   A class for reading IMC .txt files

   :param path: path to the IMC .txt file


   .. py:property:: num_channels
      :type: int

      Number of channels



   .. py:property:: channel_metals
      :type: Sequence[str]

      Symbols of metal isotopes (e.g. ``["Ag", "Ir"]``)



   .. py:property:: channel_masses
      :type: Sequence[int]

      Atomic masses of metal isotopes (e.g. ``[107, 191]``)



   .. py:property:: channel_labels
      :type: Sequence[str]

      Channel labels (user-provided)



   .. py:method:: open()

      Opens the IMC .txt file for reading.

      It is good practice to use context managers whenever possible:

      .. code-block:: python

          with TXTFile("/path/to/file.txt") as f:
              pass




   .. py:method:: close()

      Closes the IMC .txt file.

      It is good practice to use context managers whenever possible:

      .. code-block:: python

          with TXTFile("/path/to/file.txt") as f:
              pass




   .. py:method:: read_acquisition(acquisition = None, strict = True)

      Reads IMC acquisition data as numpy array.

      :param acquisition: the acquisition to read (for compatibility with ``IMCFile``
          and ``MCDFile``; unused)
      :param strict: set this parameter to False to try to recover corrupted data
      :return: the acquisition data as 32-bit floating point array,
          shape: (c, y, x)



   .. py:property:: path
      :type: pathlib.Path

      Path to the IMC file



   .. py:property:: channel_names
      :type: Sequence[str]

      Unique channel names in the format ``f"{metal}{mass}"`` (e.g.
      ``["Ag107", "Ir191"]``)



